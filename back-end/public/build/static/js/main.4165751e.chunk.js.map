{"version":3,"sources":["reportWebVitals.js","services/apiCalls.js","styles/login/Loguinstyles.js","pages/Login.jsx","styles/navBarStyles/NavBarStyles.js","components/Navbar.jsx","redux/slice/productCart.js","components/customers/ProductCard.jsx","components/customers/ProductList.jsx","pages/customers/Products.jsx","components/customers/CheckoutTableBody.jsx","components/customers/CheckoutTable.jsx","pages/customers/Checkout.jsx","pages/Register.jsx","utils/socketClient.js","pages/customers/Orders.jsx","components/customers/OrderDetailsTableBody.jsx","components/customers/OrderDetailsTable.jsx","pages/customers/OrderDetails.jsx","components/adm/ManagementUsersTableBody.jsx","components/adm/ManagementUsersTable.jsx","pages/adm/Management.jsx","pages/sellers/SellerOrders.jsx","components/sellers/SellerOrderDetailsTableBody.jsx","components/sellers/SellerOrderDetailsTable.jsx","pages/sellers/SellerOrderDetails.jsx","routes/Router.js","App.js","redux/store.js","index.js","utils/inputValidations.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiLogin","user","a","axios","post","fetchApi","data","response","error","apiRegister","newUser","getProducts","JSON","parse","localStorage","getItem","token","config","headers","authorization","get","getOrdersByUser","id","url","fetchAPI","getOrderById","getSellers","createOrder","order","apiRegisterByAdmin","getUsers","removeUser","LoguinDiv","styled","div","Inputs","input","ButonsSend","button","ButonsRegister","Login","useState","hiddenOn","setHiddenOn","connectionOn","setConnectionOn","email","password","login","setLogin","useEffect","undefined","validatePassword","target","name","value","role","sendLogin","userData","setItem","stringify","to","hidden","type","onChange","placeholder","disabled","loginValidation","onClick","NavbarDiv","NavBarProducs","NavBarOrders","NavBarProfile","NavBarCheckout","Navbar","redirectOn","setRedirectOn","userName","setUserName","pathname","useHistory","location","renderAdmin","renderSeller","renderCustomer","includes","clear","productCart","createSlice","initialState","subtotalCartList","totalPrice","reducers","createSubtotalList","state","action","payload","changeSubtotalList","prevTaskIndex","findIndex","subtotal","splice","updateTotalPrice","reduce","acc","actions","ProductCard","product","dispatch","useDispatch","useSelector","productCartReducer","count","setCount","price","urlImage","url_image","multiplication","length","Number","quantity","replace","src","alt","pattern","e","handleInputQuantity","ProductList","products","setProducts","map","index","Products","toFixed","toString","CheckoutTableBody","CheckoutTable","productsSold","Checkout","filter","redirect","setRedirect","orderId","setIdOrder","sellers","setSellers","sellerId","deliveryAddress","deliveryNumber","status","productId","setOrder","apiCall","console","log","handleChange","sendOrder","orderDispatched","RegisterUser","setNewUser","sendRegister","registerValidation","client","io","Orders","orders","setOrders","shouldUpdateOrders","socket","on","updatedOrders","saleDate","OrderDetailsTableBody","datId","salesProducts","OrderDetailsTable","OrderDetails","sellerName","setSellerName","params","useParams","seller","newStatus","userId","emit","changeStatus","toLocaleString","style","currency","ManagementUsersTableBody","deleteUser","ManagementUsersTable","users","Management","hiddenOnSet","usersList","setUsersList","SellerOrders","SellerOrderDetailsTableBody","SellerOrderDetailsTable","Router","exact","path","component","Register","SellerOrderDetails","App","configureStore","reducer","ReactDOM","render","store","document","getElementById","Joi","require","loginSchema","object","string","tlds","allow","required","min","registerSchema","module","exports","validate","register"],"mappings":"yKAYeA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8GCLCQ,E,8EAAf,WAAwBC,GAAxB,iBAAAC,EAAA,sEAEgB,8BAFhB,SAI2BC,IAAMC,KAFjB,8BAE2BH,GAJ3C,cAIUI,EAJV,gBAK2BA,EAASC,KALpC,cAKUC,EALV,yBAOWA,GAPX,2DASW,CAAEC,MAAK,OATlB,2D,+BAaeC,E,8EAAf,WAA2BC,GAA3B,iBAAAR,EAAA,sEAEgB,iCAFhB,SAI2BC,IAAMC,KAFjB,iCAE2BM,GAJ3C,cAIUL,EAJV,gBAK2BA,EAASC,KALpC,cAKUC,EALV,yBAOWA,GAPX,2DASW,CAAEC,MAAK,OATlB,2D,sBAaA,I,QAAMG,EAAW,uCAAG,oCAAAT,EAAA,wEAEEU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFQ,EAERA,MACI,0CACNC,EAAS,CACbC,QAAS,CACPC,cAAeH,IANH,SAUOb,IAAMiB,IAPjB,0CAO0BH,GAVtB,cAUVZ,EAVU,gBAWOA,EAASC,KAXhB,cAWVC,EAXU,yBAaTA,GAbS,2DAeT,CAAEC,MAAK,OAfE,0DAAH,qDAmBXa,EAAe,uCAAG,wCAAAnB,EAAA,wEAEEU,KAAKC,MAAMC,aAAaC,QAAQ,SAA9CO,EAFY,EAEZA,GAAIN,EAFQ,EAERA,MACNO,EAHc,+CAGgCD,GAC9CL,EAAS,CACbC,QAAS,CACPC,cAAeH,IANC,SAUGb,IAAMiB,IAAIG,EAAKN,GAVlB,cAUdO,EAVc,gBAWGA,EAASlB,KAXZ,cAWdC,EAXc,yBAabA,GAba,2DAeb,CAAEC,MAAK,OAfM,0DAAH,qDAmBfiB,EAAY,uCAAG,WAAOH,GAAP,yBAAApB,EAAA,wEAECU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFS,EAETA,MACFO,EAHW,qDAGyCD,GACpDL,EAAS,CACbC,QAAS,CACPC,cAAeH,IANF,SAUMb,IAAMiB,IAAIG,EAAKN,GAVrB,cAUXO,EAVW,gBAWMA,EAASlB,KAXf,cAWXC,EAXW,yBAaVA,GAbU,2DAeV,CAAEC,MAAK,OAfG,0DAAH,sDAmBZkB,EAAU,uCAAG,oCAAAxB,EAAA,wEAEGU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFO,EAEPA,MACI,iCACNC,EAAS,CACbC,QAAS,CACPC,cAAeH,IANJ,SASQb,IAAMiB,IANjB,iCAM0BH,GATvB,cASTO,EATS,gBAUQA,EAASlB,KAVjB,cAUTC,EAVS,yBAYRA,GAZQ,2DAcR,CAAEC,MAAK,OAdC,0DAAH,qDAkBVmB,EAAW,uCAAG,WAAOC,GAAP,uBAAA1B,EAAA,wEAEEU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFQ,EAERA,MACI,uCACNC,EAAS,CACbC,QAAS,CACPC,cAAeH,IANH,SAUOb,IAAMC,KAPjB,uCAO2BwB,EAAOX,GAV9B,cAUVO,EAVU,gBAWOA,EAASlB,KAXhB,cAWVC,EAXU,yBAaTA,GAbS,2DAeT,CAAEC,MAAK,OAfE,0DAAH,sDAmBXqB,EAAkB,uCAAG,WAAOnB,GAAP,uBAAAR,EAAA,wEAELU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFe,EAEfA,MACI,sCACNC,EAAS,CACbC,QAAS,CACPC,cAAeH,IANI,SAUAb,IAAMC,KAPjB,sCAO2BM,EAASO,GAVzB,cAUjBO,EAViB,gBAWAA,EAASlB,KAXT,cAWjBC,EAXiB,yBAYhBA,GAZgB,2DAchB,CAAEC,MAAK,OAdS,0DAAH,sDAkBlBsB,EAAQ,uCAAG,oCAAA5B,EAAA,wEAEKU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFK,EAELA,MACI,sCACNC,EAAS,CACbC,QAAS,CACPC,cAAeH,IANN,SAUUb,IAAMiB,IAPjB,sCAO0BH,GAVzB,cAUPZ,EAVO,gBAWUA,EAASC,KAXnB,cAWPC,EAXO,yBAaNA,GAbM,2DAeN,CAAEC,MAAK,OAfD,0DAAH,qDAmBRuB,EAAU,uCAAG,WAAOT,GAAP,yBAAApB,EAAA,wEAEGU,KAAKC,MAAMC,aAAaC,QAAQ,SAA1CC,EAFO,EAEPA,MACFO,EAHS,8CAGoCD,GAC7CL,EAAS,CACbC,QAAS,CACPC,cAAeH,IANJ,SAUQb,IAAMC,KAAKmB,EAAKN,GAVxB,cAUTZ,EAVS,gBAWQA,EAASC,KAXjB,cAWTC,EAXS,yBAaRA,GAbQ,2DAeR,CAAEC,MAAK,OAfC,0DAAH,sD,gBC7JHwB,EAAYC,IAAOC,IAAV,uTAkBTC,EAASF,IAAOG,MAAV,gMAWNC,EAAaJ,IAAOK,OAAV,0PAeVC,EAAiBN,IAAOK,OAAV,uR,OClCZ,SAASE,IACtB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,qBAAxC,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,mBAAS,CACjCK,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAKAC,qBAAU,WACR,IAAMjD,EAAOW,KAAKC,MAAMC,aAAaC,QAAQ,cAChCoC,IAATlD,GACF4C,EAAgB5C,KAEjB,IAEH,IAAMmD,EAAmB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAC1CN,EAAS,2BAAKD,GAAN,kBACLM,EAAOC,MAUZ,IAAyBC,EAMnBC,EAAS,uCAAG,0CAAAvD,EAAA,sEACOF,EAASgD,GADhB,QACVzC,EADU,QAEHC,MACXmC,GAAY,IAEJ3B,EAA2CT,EAA3CS,MADH,EAC8CT,EAApCN,KAAQqB,EADlB,EACkBA,GAAIgC,EADtB,EACsBA,KAAMR,EAD5B,EAC4BA,MAAOU,EADnC,EACmCA,KAClCE,EAAW,CAAEpC,KAAIgC,OAAMR,QAAOU,OAAMxC,SAC1CF,aAAa6C,QAAQ,OAAQ/C,KAAKgD,UAAUF,IAC5Cb,EAAgBa,IARF,2CAAH,qDAYf,OACE,eAAC1B,EAAD,WAEIY,GAAgB,cAAC,WAAD,CAAUiB,IArBPL,EAqB4BZ,EAAaY,KApBnD,kBAATA,EAAiC,gBACxB,WAATA,EAA0B,iBACvB,wBAoBL,mBACEM,OAASpB,EACT,cAAY,sCAFd,gCAMA,gCACE,cAACP,EAAD,CACEmB,KAAK,QACLS,KAAK,OACLC,SAAWZ,EACXa,YAAY,oBACZ,cAAY,8BAEd,cAAC9B,EAAD,CACEmB,KAAK,WACLS,KAAK,WACLC,SAAWZ,EACXa,YAAY,mBACZ,cAAY,oCAGhB,cAAC5B,EAAD,CACE0B,KAAK,SACLG,WApDoBC,0BAAgBnB,GAAOxC,MAqD3C4D,QAAU,kBAAMX,KAChB,cAAY,6BAJd,mBAQA,cAAC,IAAD,CAAMI,GAAG,YAAT,SACE,cAACtB,EAAD,CACEwB,KAAK,SACL,cAAY,gCAFd,2C,sBC3FKM,EAAYpC,IAAOC,IAAV,8SAgBToC,EAAgBrC,IAAOC,IAAV,8KASbqC,EAAetC,IAAOC,IAAV,8KASZsC,EAAgBvC,IAAOC,IAAV,8KASbuC,EAAiBxC,IAAOC,IAAV,8KClCZ,SAASwC,KACtB,MAAoCjC,oBAAS,GAA7C,mBAAOkC,EAAP,KAAmBC,EAAnB,KACA,EAAgCnC,qBAAhC,mBAAOoC,EAAP,KAAiBC,EAAjB,KACQC,EAAaC,uBAAaC,SAA1BF,SAER7B,qBAAU,WACR,IAAQI,EAAS1C,KAAKC,MAAMC,aAAaC,QAAQ,SAAzCuC,KACRwB,EAAYxB,KACX,IAEH,IAKM4B,EACJ,cAACX,EAAD,UACE,qBAAK,cAAY,gDAAjB,SACE,2DAKAY,EACJ,cAACZ,EAAD,UACE,cAAC,IAAD,CACEV,GAAG,iBACH,cAAY,gDAFd,SAIE,6CAKAuB,EACJ,qCACE,cAACd,EAAD,UACE,cAAC,IAAD,CACET,GAAG,qBACH,cAAY,kDAFd,SAIE,8CAGJ,cAACU,EAAD,UACE,cAAC,IAAD,CACEV,GAAG,mBACH,cAAY,gDAFd,SAIE,qDAiBR,OACE,eAACQ,EAAD,WAEIM,EAAa,cAAC,WAAD,CAAUd,GAAG,WAAc,KAdxCkB,EAASM,SAAS,YACbD,EAELL,EAASM,SAAS,UACbF,EAELJ,EAASM,SAAS,SACbH,OADT,EAWE,cAACV,EAAD,UACE,oBAAI,cAAY,mDAAhB,SACGK,MAGL,cAACJ,EAAD,UACE,wBACEV,KAAK,SACLK,QAAU,kBArEhBtD,aAAawE,aACbV,GAAc,IAqER,cAAY,gDAHd,uB,sBCvFKW,GAAcC,aAAY,CACrClC,KAAM,cACNmC,aAAc,CACZC,iBAAkB,GAClBC,WAAY,GAEdC,SAAU,CACRC,mBAAoB,SAACC,EAAOC,GAC1BD,EAAMJ,iBAAN,uBAA6BI,EAAMJ,kBAAnC,CAAqDK,EAAOC,WAE9DC,mBAAoB,SAACH,EAAOC,GAC1B,IAAMG,EAAgBJ,EAAMJ,iBACzBS,WAAU,SAACC,GAAD,OAAcA,EAAS9E,KAAOyE,EAAOC,QAAQ1E,MAC1DwE,EAAMJ,iBAAiBW,OAAOH,EAAe,EAAGH,EAAOC,UAEzDM,iBAAkB,SAACR,GACjBA,EAAMH,WAAaG,EAAMJ,iBACtBa,QAAO,SAACC,EAAKtG,GAAN,OAAYsG,EAAMtG,EAAEkG,WAAU,OAKvC,GAGgBb,GAAYkB,QAFjCZ,GADK,GACLA,mBACAI,GAFK,GAELA,mBACAK,GAHK,GAGLA,iBAEaf,MAAf,QCrBe,SAASmB,GAAYC,GAClC,IAAMC,EAAWC,cACXnB,EAAmBoB,aAAY,qBAAGC,mBACnBrB,oBAErB,EAA0BjD,mBAAS,GAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAEA,EAA8DN,EAAtDA,QAAWrF,EAAnB,EAAmBA,GAAIgC,EAAvB,EAAuBA,KAAM4D,EAA7B,EAA6BA,MAAkBC,EAA/C,EAAoCC,UAEpClE,qBAAU,WACR,IAAMmE,EAAiBL,EAAQE,EAE3BxB,EAAiB4B,OAASC,OAAO,MACnCX,EAASf,GAAmB,CAC1BO,SAAUiB,EAAgB/F,KAAIgC,OAAM4D,QAAOM,SAAUR,MAGvDJ,EAASX,GAAmB,CAC1BG,SAAUiB,EAAgB/F,KAAIgC,OAAM4D,QAAOM,SAAUR,KAEvDJ,EAASN,SAGV,CAACU,IAYJ,OACE,gCACE,gCACE,mCACA,mBACE,8DAAuD1F,GADzD,SAGI4F,EAAMO,QAAQ,IAAK,UAGzB,qBACEC,IAAG,UAAMP,GACTQ,IAAI,mBACJ,6DAAsDrG,KAExD,8BACE,mBACE,8DAAuDA,GADzD,SAGGgC,MAGL,wBACES,KAAK,SACLK,QA9BgB,kBAAO4C,EAAQ,EAAIC,EAASD,EAAQ,GAAK,MA+BzD,+DAAwD1F,GAH1D,eAOA,uBACEyC,KAAK,SACLR,MAAQyD,EACRY,QAAQ,SACR5D,SAAW,SAAC6D,GAAD,OArCW,SAAC,GAAe,IAAbtE,EAAY,EAAZA,MAC7B0D,EAASM,OAAOhE,IAoCMuE,CAAoBD,EAAExE,SACxC,+DAAwD/B,KAE1D,wBACEyC,KAAK,SACLK,QAhDa,WACjB6C,EAASD,EAAQ,IAgDb,gEAAyD1F,GAH3D,kBC1ES,SAASyG,KACtB,MAAgCtF,mBAAS,IAAzC,mBAAOuF,EAAP,KAAiBC,EAAjB,KAWA,OATA/E,qBAAU,WACR,IAAM9B,EAAG,uCAAG,4BAAAlB,EAAA,sEACaS,IADb,OACJJ,EADI,OAGV0H,EAAY1H,GAHF,2CAAH,qDAKTa,MACC,IAGD,8BAEI4G,EAASE,KAAI,SAACvB,EAASwB,GAAV,OACX,cAACzB,GAAD,CAA2BC,QAAUA,EAAU,cAAcA,EAAQrF,IAAlD6G,QCfd,SAASC,KACtB,IAAMzC,EAAamB,aAAY,qBAAGC,mBACbpB,cAAa0C,QAAQ,GAAGC,WAAWb,QAAQ,IAAK,KAErE,OACE,qCACE,cAAC,GAAD,IACA,cAACM,GAAD,IACA,kDACA,cAAC,IAAD,CACElE,GAAG,qBACH,cAAY,2CAFd,SAIE,wBACEE,KAAK,SACLG,SAA0B,SAAfyB,EACXvB,QAAU,kBAAMtD,aAAa6C,QAAQ,QAAS/C,KAAKgD,UAAU+B,KAC7D,cAAY,iCAJd,SAMIA,SCpBG,SACf4C,GADe,GACiE,IAAD,IAA3D5B,QAAWrF,EAAgD,EAAhDA,GAAIgC,EAA4C,EAA5CA,KAAMkE,EAAsC,EAAtCA,SAAUN,EAA4B,EAA5BA,MAAOd,EAAqB,EAArBA,SAAY+B,EAAS,EAATA,MAC9DvB,EAAWC,cASjB,OACE,+BACE,oBACE,2EAAoEsB,GADtE,SAGGA,EAAQ,IAEX,oBACE,oEAA6DA,GAD/D,SAGG7E,IAEH,oBACE,wEAAiE6E,GADnE,SAGGX,IAEH,oBACE,0EAAmEW,GADrE,SAGGjB,EAAMO,QAAQ,IAAK,OAEtB,oBACE,yEAAkEU,GADpE,SAGG/B,EAASiC,QAAQ,GAAGZ,QAAQ,IAAK,OAEpC,6BACE,wBACE1D,KAAK,SACLK,QAAU,kBApChBwC,EAASX,GAAmB,CAC1BG,SAAU,EAAG9E,KAAIgC,OAAM4D,QAAOM,SAAU,UAE1CZ,EAASN,OAkCH,sEAA+D6B,GAHjE,0BCxCO,SAASK,GAAT,GAA0C,IAAjBC,EAAgB,EAAhBA,aACtC,OACE,kCACE,gCACE,+BACE,sCACA,iDACA,4CACA,mDACA,2CACA,kDAGJ,gCAEIA,EAAaP,KAAI,SAACvB,EAASwB,GAAV,OACf,cAACI,GAAD,CAAmB5B,QAAUA,EAAwBwB,MAAQA,GAAhBA,WCZ1C,SAASO,KACtB,IAAMD,EAAe3B,aAAY,qBAAGC,mBACfrB,oBAAmBiD,QAAO,SAAChC,GAAD,OAAaA,EAAQP,SAAW,KAEzET,EAAamB,aAAY,qBAAGC,mBACbpB,cAErB,EAAgClD,oBAAS,GAAzC,mBAAOmG,EAAP,KAAiBC,EAAjB,KACA,EAA8BpG,mBAAS,IAAvC,mBAAOqG,EAAP,KAAgBC,EAAhB,KACA,EAA8BtG,mBAAS,IAAvC,mBAAOuG,EAAP,KAAgBC,EAAhB,KACA,EAA0BxG,mBAAS,CACjCyG,SAAU,EACVvD,aACAwD,gBAAiB,GACjBC,eAAgB,GAChBC,OAAQ,WACRZ,aAAcA,EACXP,KAAI,kBAAkC,CAAEoB,UAApC,EAAGhI,GAA4CkG,SAA/C,EAAkBA,eAP3B,mBAAO5F,EAAP,KAAc2H,EAAd,KAUArG,qBAAU,WACR,IAAMsG,EAAO,uCAAG,4BAAAtJ,EAAA,sEACSwB,IADT,QACRnB,EADQ,QAEDC,MACXiJ,QAAQC,IAAInJ,EAASC,OAErByI,EAAW1I,GALC,2CAAH,qDAQbiJ,MACC,IAEH,IAAMG,EAAe,SAAC,GAAqB,IAAnBrG,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACf,kBAATD,GAA0BiG,EAAS,2BAAK3H,GAAN,IAAasH,SAAU3F,KAChD,qBAATD,GAA6BiG,EAAS,2BAAK3H,GAAN,IAAauH,gBAAiB5F,KAC1D,4BAATD,GACFiG,EAAS,2BAAK3H,GAAN,IAAawH,eAAgB7F,MAInCqG,EAAS,uCAAG,4BAAA1J,EAAA,sEACcyB,EAAYC,GAD1B,OACViI,EADU,OAEhBd,EAAWc,EAAgBvI,IAC3BuH,GAAY,GAHI,2CAAH,qDAMf,OACE,qCAEID,EAAW,cAAC,WAAD,CAAU/E,GAAE,2BAAuBiF,KAAiB,KAEjE,cAAC,GAAD,IACA,kDACA,cAACN,GAAD,CAAeC,aAAeA,IANhC,SAQE,qBACE,cAAY,+CADd,SAGG9C,EAAW0C,QAAQ,GAAGC,WAAWb,QAAQ,IAAK,OAEjD,qEACA,wBACEnE,KAAK,gBACLU,SAAW,SAAC6D,GAAD,OAAO8B,EAAa9B,EAAExE,SACjC,cAAY,mCAHd,SAMI2F,EAAQd,KAAI,WAAeC,GAAf,IAAG7G,EAAH,EAAGA,GAAIgC,EAAP,EAAOA,KAAP,OACV,wBAAsBC,MAAQjC,EAA9B,SACGgC,GADW6E,QAKpB,uBACE7E,KAAK,mBACLS,KAAK,OACLR,MAAQ3B,EAAMuH,gBACdnF,SAAW,SAAC6D,GAAD,OAAO8B,EAAa9B,EAAExE,SACjC,cAAY,qCAEd,uBACEC,KAAK,0BACLS,KAAK,SACL6D,QAAQ,SACRrE,MAAQ3B,EAAMwH,eACdpF,SAAW,SAAC6D,GAAD,OAAO8B,EAAa9B,EAAExE,SACjC,cAAY,2CAEd,wBACEU,KAAK,SACLK,QAAU,kBAAMwF,KAChB,cAAY,yCAHd,iCCtFS,SAASE,KACtB,MAAgCrH,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOkC,EAAP,KAAmBC,EAAnB,KACA,EAA8BnC,mBAAS,CACrCa,KAAM,GACNR,MAAO,GACPC,SAAU,GACVS,KAAM,aAJR,mBAAO9C,EAAP,KAAgBqJ,EAAhB,KAOMJ,EAAe,SAAC,GAAiC,IAAD,IAA9BtG,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCwG,EAAW,2BAAKrJ,GAAN,kBAAgB4C,EAAOC,MASnC,IAAMyG,EAAY,uCAAG,0CAAA9J,EAAA,sEACIO,EAAYC,GADhB,QACbH,EADa,QAENC,MACXmC,GAAY,IAEJ3B,EAA2CT,EAA3CS,MADH,EAC8CT,EAApCN,KAAQqB,EADlB,EACkBA,GAAIgC,EADtB,EACsBA,KAAMR,EAD5B,EAC4BA,MAAOU,EADnC,EACmCA,KAClCE,EAAW,CAAEpC,KAAIgC,OAAMR,QAAOU,OAAMxC,SAC1CF,aAAa6C,QAAQ,OAAQ/C,KAAKgD,UAAUF,IAC5CkB,GAAc,IARG,2CAAH,qDAYlB,OACE,eAAC5C,EAAD,WAEI2C,EAAa,cAAC,WAAD,CAAUd,GAAG,uBAA0B,KAEtD,mBACEC,OAASpB,EACT,cAAY,4CAFd,gCAMA,cAACP,EAAD,CACEmB,KAAK,OACLS,KAAK,OACLR,MAAQ7C,EAAQ4C,KAChBU,SAAW2F,EACX1F,YAAY,iBACZ,cAAY,gCAEd,cAAC9B,EAAD,CACEmB,KAAK,QACLS,KAAK,OACLR,MAAQ7C,EAAQoC,MAChBkB,SAAW2F,EACX1F,YAAY,oBACZ,cAAY,iCAEd,cAAC9B,EAAD,CACEmB,KAAK,WACLS,KAAK,WACLR,MAAQ7C,EAAQqC,SAChBiB,SAAW2F,EACX1F,YAAY,mBACZ,cAAY,oCAEd,cAAC5B,EAAD,CACE0B,KAAK,SACLG,WAtDoB+F,6BAAmBvJ,GAASF,MAuDhD4D,QAAU,kBAAM4F,KAChB,cAAY,mCAJd,6B,aCzESE,GAFAC,aAAG,yBCIH,SAASC,KACtB,MAA4B3H,mBAAS,IAArC,mBAAO4H,EAAP,KAAeC,EAAf,KAEApH,qBAAU,WACR,IAAMsG,EAAO,uCAAG,4BAAAtJ,EAAA,sEACSmB,IADT,QACRd,EADQ,QAEDC,MACXiJ,QAAQC,IAAInJ,EAASC,OAErB8J,EAAU/J,GALE,2CAAH,qDAQbiJ,MACC,IAEH,IAAMe,EAAqBF,EAAO/C,OAAS,EAQ3C,OANApE,qBAAU,WACRsH,GAAOC,GAAG,iBAAiB,SAACC,GAC1BJ,EAAUI,QAEX,CAACH,IAGF,gCACE,cAAC7F,GAAD,IAEE2F,EAAOnC,KAAI,SAACtG,EAAOuG,GAAR,OACT,cAAC,IAAD,CAEEtE,GAAE,2BAAuBjC,EAAMN,IAFjC,SAIE,gCAGE,mBAAG,0DAAmDM,EAAMN,IAA5D,SACIM,EAAMN,KAEV,mBAAG,iEAA0DM,EAAMN,IAAnE,SACIM,EAAMyH,SAEV,mBAAG,4DAAqDzH,EAAMN,IAA9D,SACIM,EAAM+I,WAEV,mBAAG,4DAAqD/I,EAAMN,IAA9D,SACIM,EAAM+D,WAAW8B,QAAQ,IAAK,SAZ5BU,IAJFA,SChCH,SACfyC,GADe,GACmC,IAA1BjE,EAAyB,EAAzBA,QAASwB,EAAgB,EAAhBA,MAAO0C,EAAS,EAATA,MAC9BvH,EAA6CqD,EAA7CrD,KAAuBkE,EAAsBb,EAAvCmE,cAAiBtD,SAAYN,EAAUP,EAAVO,MAE3C,OACE,+BACE,oBACE,wBAAiB2D,EAAjB,8BAA4C1C,GAD9C,SAGGA,EAAQ,IAEX,oBACE,wBAAiB0C,EAAjB,uBAAqC1C,GADvC,SAGG7E,IAEH,oBACE,wBAAiBuH,EAAjB,2BAAyC1C,GAD3C,SAGGX,IAEH,oBACE,wBAAiBqD,EAAjB,6BAA2C1C,GAD7C,SAGGjB,EAAMO,QAAQ,IAAK,OAEtB,oBACE,wBAAiBoD,EAAjB,4BAA0C1C,GAD5C,UAGIZ,OAAOL,GAAUM,GAAWa,QAAQ,OAxBhCF,GCJC,SAAS4C,GAAT,GAAiD,IAApB/C,EAAmB,EAAnBA,SAAU6C,EAAS,EAATA,MACpD,OACE,kCACE,gCACE,+BACE,sCACA,iDACA,4CACA,mDACA,gDAGJ,gCAEI7C,EAASE,KAAI,SAACvB,EAASwB,GAAV,OACX,cAACyC,GAAD,CAEEjE,QAAUA,EACVwB,MAAQA,EACR0C,MAAQA,GAHF1C,WCbL,SAAS6C,KACtB,MAA0BvI,mBAAS,IAAnC,mBAAOb,EAAP,KAAc2H,EAAd,KACA,EAAoC9G,mBAAS,IAA7C,mBAAOwI,EAAP,KAAmBC,EAAnB,KACA,EAAgCzI,mBAAS,IAAzC,mBAAOuF,EAAP,KAAiBC,EAAjB,KACMkD,EAASC,sBAEflI,qBAAU,WACR,IAAMsG,EAAO,uCAAG,4BAAAtJ,EAAA,sEACSuB,EAAa0J,EAAO7J,IAD7B,QACRf,EADQ,QAEDC,MACXiJ,QAAQC,IAAInJ,EAASC,QAErB+I,EAAShJ,GACT2K,EAAc3K,EAAS8K,OAAO/H,MAC9B2E,EAAY1H,EAASyH,WAPT,2CAAH,qDAUbwB,MAEC,IAEHtG,qBAAU,WACRsH,GAAOC,GAAG,iBAAiB,YAAiB,IAAdpB,EAAa,EAAbA,OAC5BE,EAAS,2BAAK3H,GAAN,IAAayH,iBAEtB,CAACzH,IAEJ,IAKMiJ,EAAQ,wCAEd,OACE,gCACE,cAACnG,GAAD,IACA,mDAGA,gCACE,mBACE,wBAAiBmG,EAAjB,2BADF,SAGGjJ,EAAMN,KAET,mBACE,wBAAiBuJ,EAAjB,8BADF,SAGGI,IAEH,mBACE,wBAAiBJ,EAAjB,6BADF,SAGGjJ,EAAM+I,WAET,mBACE,wBAAiBE,EAAjB,kCADF,SAGGjJ,EAAMyH,SAET,wBACEtF,KAAK,SACLR,MAAM,WACNW,SAA4B,mBAAjBtC,EAAMyH,OACjBjF,QAAU,SAACyD,GAAD,OAtCG,SAAC,GAAsC,IAAnByD,EAAkB,EAAnCjI,OAAUE,MACpBgI,EAAW3K,KAAKC,MAAMC,aAAaC,QAAQ,SAA/CO,GACRkJ,GAAOgB,KAAK,eAAiB,CAAED,SAAQzC,QAASlH,EAAMN,GAAI+H,OAAQiC,IAoC3CG,CAAa5D,IAC9B,cAAY,gDALd,qCAUF,cAACkD,GAAD,CAAmB/C,SAAWA,EAAW6C,MAAQA,IACjD,mBAAG,cAAY,oDAAf,0BAEctD,OAAO3F,EAAM+D,YACpB+F,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,cC/ErD,SACfC,GADe,GACwC,IAA5B5L,EAA2B,EAA3BA,KAAM6L,EAAqB,EAArBA,WAAY3D,EAAS,EAATA,MACnC7G,EAA0BrB,EAA1BqB,GAAIgC,EAAsBrD,EAAtBqD,KAAMR,EAAgB7C,EAAhB6C,MAAOU,EAASvD,EAATuD,KAEnBqH,EAAQ,mCAEd,OACE,+BACE,oBAAI,wBAAiBA,EAAjB,wBAAsC1C,GAA1C,SACGA,EAAQ,IAEX,oBAAI,wBAAiB0C,EAAjB,iBAA+B1C,GAAnC,SACG7E,IAEH,oBAAI,wBAAiBuH,EAAjB,kBAAgC1C,GAApC,SACGrF,IAEH,oBAAI,wBAAiB+H,EAAjB,iBAA+B1C,GAAnC,SACG3E,IAEH,6BACE,wBACEO,KAAK,SACLK,QAAU,kBAAM0H,EAAWxK,IAC3B,wBAAiBuJ,EAAjB,mBAAiC1C,GAHnC,yBAdMA,GCNC,SAAS4D,GAAT,GAAsD,IAAtBC,EAAqB,EAArBA,MAAOF,EAAc,EAAdA,WACpD,OACE,kCACE,gCACE,+BACE,sCACA,sCACA,wCACA,sCACA,8CAGJ,gCAEIE,EAAM9D,KAAI,SAACjI,EAAMkI,GAAP,OACR,cAAC0D,GAAD,CAEE5L,KAAOA,EACP6L,WAAaA,EACb3D,MAAQA,GAHFA,WCdL,SAAS8D,KACtB,MAAgCxJ,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBwJ,EAAjB,KACA,EAAkCzJ,mBAAS,IAA3C,mBAAO0J,EAAP,KAAkBC,EAAlB,KACA,EAA8B3J,mBAAS,CACrCa,KAAM,GACNR,MAAO,GACPC,SAAU,GACVS,KAAM,aAJR,mBAAO9C,EAAP,KAAgBqJ,EAAhB,KAOMJ,EAAe,SAAC,GAAiC,IAAD,IAA9BtG,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCwG,EAAW,2BAAKrJ,GAAN,kBAAgB4C,EAAOC,MAG7BiG,EAAO,uCAAG,4BAAAtJ,EAAA,sEACS4B,IADT,QACRvB,EADQ,QAEDC,MACXiJ,QAAQC,IAAInJ,EAASC,OAErB4L,EAAa7L,GALD,2CAAH,qDASb2C,qBAAU,WACRsG,MACC,IAQH,IAAMQ,EAAY,uCAAG,sBAAA9J,EAAA,sEACI2B,EAAmBnB,GADvB,cAENF,MACX0L,GAAY,IAEZ1C,IACAO,EAAW,CACTzG,KAAM,GACNR,MAAO,GACPC,SAAU,GACVS,KAAM,cAVS,2CAAH,qDAeZsI,EAAU,uCAAG,WAAOxK,GAAP,SAAApB,EAAA,sEACX6B,EAAWT,GADA,uBAEXkI,IAFW,2CAAH,sDAKhB,OACE,qCACE,gCACE,cAAC9E,GAAD,IACA,mBACE,cAAY,yCACZZ,OAASpB,EAFX,uCAMA,uBACEY,KAAK,OACLS,KAAK,OACLR,MAAQ7C,EAAQ4C,KAChBU,SAAW2F,EACX1F,YAAY,mBACZ,cAAY,6BAEd,uBACEX,KAAK,QACLS,KAAK,OACLR,MAAQ7C,EAAQoC,MAChBkB,SAAW2F,EACX1F,YAAY,SACZ,cAAY,8BAEd,uBACEX,KAAK,WACLS,KAAK,WACLR,MAAQ7C,EAAQqC,SAChBiB,SAAW2F,EACX1F,YAAY,mBACZ,cAAY,iCAEd,yBACEX,KAAK,OACLC,MAAQ7C,EAAQ8C,KAChBQ,SAAW2F,EACX,cAAY,4BAJd,UAME,wBAAQpG,MAAM,WAAd,qBACA,wBAAQA,MAAM,SAAd,sBACA,wBAAQA,MAAM,gBAAd,sBAEF,wBACEQ,KAAK,SACLG,WAvEkB+F,6BAAmBvJ,GAASF,MAwE9C4D,QAAU,kBAAM4F,KAChB,cAAY,gCAJd,0BASF,cAAC+B,GAAD,CACEC,MAAQG,EACRL,WAAaA,OC5GN,SAASO,KACtB,MAA4B5J,mBAAS,IAArC,mBAAO4H,EAAP,KAAeC,EAAf,KAEApH,qBAAU,WACR,IAAMsG,EAAO,uCAAG,4BAAAtJ,EAAA,sEACSmB,IADT,QACRd,EADQ,QAEDC,MACXiJ,QAAQC,IAAInJ,EAASC,OAErB8J,EAAU/J,GALE,2CAAH,qDAQbiJ,MACC,IAEH,IAAMe,EAAqBF,EAAO/C,OAAS,EAQ3C,OANApE,qBAAU,WACRsH,GAAOC,GAAG,iBAAiB,SAACC,GAC1BJ,EAAUI,QAEX,CAACH,IAGF,gCACE,cAAC7F,GAAD,IAEE2F,EAAOnC,KAAI,SAACtG,EAAOuG,GAAR,OACT,eAAC,IAAD,CAEEtE,GAAE,yBAAqBjC,EAAMN,IAF/B,UAIE,gCAGE,mBAAG,wDAAiDM,EAAMN,IAA1D,SACIM,EAAMN,KAEV,mBAAG,+DAAwDM,EAAMN,IAAjE,SACIM,EAAMyH,SAEV,mBAAG,0DAAmDzH,EAAMN,IAA5D,SACIM,EAAM+I,WAEV,mBAAG,0DAAmD/I,EAAMN,IAA5D,SACIM,EAAM+D,WAAW8B,QAAQ,IAAK,SAZ5BU,GAeR,mBAAG,4DAAqDvG,EAAMN,IAA9D,mBACOM,EAAMuH,gBADb,aACiCvH,EAAMwH,oBApBjCjB,SChCH,SACfmE,GADe,GACyC,IAA1B3F,EAAyB,EAAzBA,QAASwB,EAAgB,EAAhBA,MAAO0C,EAAS,EAATA,MACpCvH,EAA6CqD,EAA7CrD,KAAuBkE,EAAsBb,EAAvCmE,cAAiBtD,SAAYN,EAAUP,EAAVO,MAE3C,OACE,+BACE,oBACE,wBAAiB2D,EAAjB,8BAA4C1C,GAD9C,SAGGA,EAAQ,IAEX,oBACE,wBAAiB0C,EAAjB,uBAAqC1C,GADvC,SAGG7E,IAEH,oBACE,wBAAiBuH,EAAjB,2BAAyC1C,GAD3C,SAGGX,IAEH,oBACE,wBAAiBqD,EAAjB,6BAA2C1C,GAD7C,SAGGjB,EAAMO,QAAQ,IAAK,OAEtB,oBACE,wBAAiBoD,EAAjB,4BAA0C1C,GAD5C,UAGIZ,OAAOL,GAAUM,GAAWa,QAAQ,OAxBhCF,GCJC,SAASoE,GAAT,GAAuD,IAApBvE,EAAmB,EAAnBA,SAAU6C,EAAS,EAATA,MAC1D,OACE,kCACE,gCACE,+BACE,sCACA,iDACA,4CACA,mDACA,gDAGJ,gCAEI7C,EAASE,KAAI,SAACvB,EAASwB,GAAV,OACX,cAACmE,GAAD,CAEE3F,QAAUA,EACVwB,MAAQA,EACR0C,MAAQA,GAHF1C,WCbL,SAAS6C,KACtB,MAA0BvI,mBAAS,IAAnC,mBAAOb,EAAP,KAAc2H,EAAd,KACA,EAAgC9G,mBAAS,IAAzC,mBAAOuF,EAAP,KAAiBC,EAAjB,KACMkD,EAASC,sBAEflI,qBAAU,WACR,IAAMsG,EAAO,uCAAG,4BAAAtJ,EAAA,sEACSuB,EAAa0J,EAAO7J,IAD7B,QACRf,EADQ,QAEDC,MACXiJ,QAAQC,IAAInJ,EAASC,QAErB+I,EAAShJ,GACT0H,EAAY1H,EAASyH,WANT,2CAAH,qDASbwB,MAEC,IAEHtG,qBAAU,WACRsH,GAAOC,GAAG,iBAAiB,YAAiB,IAAdpB,EAAa,EAAbA,OAC5BE,EAAS,2BAAK3H,GAAN,IAAayH,iBAEtB,CAACzH,IAEJ,IAAM6J,EAAe,SAAC,GAAsC,IAAnBH,EAAkB,EAAnCjI,OAAUE,MACpBgI,EAAW3K,KAAKC,MAAMC,aAAaC,QAAQ,SAA/CO,GACRkJ,GAAOgB,KAAK,eAAiB,CAAED,SAAQzC,QAASlH,EAAMN,GAAI+H,OAAQiC,KAG9DT,EAAQ,sCAEd,OACE,gCACE,cAACnG,GAAD,IACA,mDAGA,gCACE,mBACE,wBAAiBmG,EAAjB,2BADF,SAGGjJ,EAAMN,KAET,mBACE,wBAAiBuJ,EAAjB,6BADF,SAGGjJ,EAAM+I,WAET,mBACE,wBAAiBE,EAAjB,kCADF,SAGGjJ,EAAMyH,SAET,wBACEtF,KAAK,SACLR,MAAM,aACNW,SAA4B,aAAjBtC,EAAMyH,OACjBjF,QAAU,SAACyD,GAAD,OAAO4D,EAAa5D,IAC9B,cAAY,+CALd,6BASA,wBACE9D,KAAK,SACLR,MAAM,iBACNW,SAA4B,eAAjBtC,EAAMyH,OACjBjF,QAAU,SAACyD,GAAD,OAAO4D,EAAa5D,IAC9B,cAAY,8CALd,kCAUF,cAAC0E,GAAD,CAAyBvE,SAAWA,EAAW6C,MAAQA,IACvD,mBAAG,wBAAiBA,EAAjB,gBAAH,0BAEctD,OAAO3F,EAAM+D,YACpB+F,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,cCxErD,SAASY,KACtB,OACE,eAAC,SAAD,WACE,cAAC,QAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,WAAD,CAAU7I,GAAG,SAAS8I,UAAYnK,MAGpC,cAAC,QAAD,CAAOiK,OAAK,EAACC,KAAK,SAASC,UAAYnK,IAEvC,cAAC,QAAD,CAAOiK,OAAK,EAACC,KAAK,YAAYC,UAAYC,KAE1C,cAAC,QAAD,CAAOH,OAAK,EAACC,KAAK,mBAAmBC,UAAYvC,KAEjD,cAAC,QAAD,CAAOqC,OAAK,EAACC,KAAK,uBAAuBC,UAAY3B,KAErD,cAAC,QAAD,CAAOyB,OAAK,EAACC,KAAK,qBAAqBC,UAAYvE,KAEnD,cAAC,QAAD,CAAOqE,OAAK,EAACC,KAAK,iBAAiBC,UAAYN,KAE/C,cAAC,QAAD,CAAOI,OAAK,EAACC,KAAK,qBAAqBC,UAAYE,KAEnD,cAAC,QAAD,CAAOJ,OAAK,EAACC,KAAK,gBAAgBC,UAAYV,KAE9C,cAAC,QAAD,CAAOQ,OAAK,EAACC,KAAK,qBAAqBC,UAAYjE,QCxB1CoE,OARf,WACE,OACE,8BACE,cAACN,GAAD,OCHSO,gBAAe,CAC5BC,QAAS,CAAEjG,yBCKbkG,IAASC,OACN,cAAC,IAAD,CAAUC,MAAQA,GAAlB,SACG,cAAC,gBAAD,UACE,cAAC,GAAD,QAGNC,SAASC,eAAe,SAG1B9N,K,mBClBA,IAAM+N,EAAMC,EAAQ,IAIdC,EAAcF,EAAIG,OAAO,CAE7B3K,MAAOwK,EAAII,SAAS5K,MAAM,CAAE6K,KAAM,CAAEC,OAAO,KAAWC,WACtD9K,SAAUuK,EAAII,SAASI,IALG,GAKsBD,aAG5CE,EAAiBT,EAAIG,OAAO,CAChCnK,KAAMgK,EAAII,SAASI,IARI,IAQkBD,WACzC/K,MAAOwK,EAAII,SAAS5K,MAAM,CAAE6K,KAAM,CAAEC,OAAO,KAAWC,WACtD9K,SAAUuK,EAAII,SAASI,IAXG,GAWsBD,WAChDrK,KAAM8J,EAAII,WAGZM,EAAOC,QAAU,CACf9J,gBAAiB,SAACnB,GAAD,OAAWwK,EAAYU,SAASlL,IACjDiH,mBAAoB,SAACkE,GAAD,OAAcJ,EAAeG,SAASC,M","file":"static/js/main.4165751e.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nasync function apiLogin(user) {\n  try {\n    const url = 'http://localhost:3001/login';\n\n    const fetchApi = await axios.post(url, user);\n    const response = await fetchApi.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n}\n\nasync function apiRegister(newUser) {\n  try {\n    const url = 'http://localhost:3001/register';\n\n    const fetchApi = await axios.post(url, newUser);\n    const response = await fetchApi.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n}\n\nconst getProducts = async () => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = 'http://localhost:3001/customer/products';\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchApi = await axios.get(url, config);\n    const response = await fetchApi.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst getOrdersByUser = async () => {\n  try {\n    const { id, token } = JSON.parse(localStorage.getItem('user'));\n    const url = `http://localhost:3001/customer/order/${id}`;\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchAPI = await axios.get(url, config);\n    const response = await fetchAPI.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst getOrderById = async (id) => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = `http://localhost:3001/customer/order/sales/${id}`;\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchAPI = await axios.get(url, config);\n    const response = await fetchAPI.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst getSellers = async () => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = 'http://localhost:3001/register';\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n    const fetchAPI = await axios.get(url, config);\n    const response = await fetchAPI.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst createOrder = async (order) => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = 'http://localhost:3001/customer/order';\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchAPI = await axios.post(url, order, config);\n    const response = await fetchAPI.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst apiRegisterByAdmin = async (newUser) => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = 'http://localhost:3001/adminRegister';\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchAPI = await axios.post(url, newUser, config);\n    const response = await fetchAPI.data;\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst getUsers = async () => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = 'http://localhost:3001/adminRegister';\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchApi = await axios.get(url, config);\n    const response = await fetchApi.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nconst removeUser = async (id) => {\n  try {\n    const { token } = JSON.parse(localStorage.getItem('user'));\n    const url = `http://localhost:3001/adminRegister/${id}`;\n    const config = {\n      headers: {\n        authorization: token,\n      },\n    };\n\n    const fetchApi = await axios.post(url, config);\n    const response = await fetchApi.data;\n\n    return response;\n  } catch (error) {\n    return { error };\n  }\n};\n\nexport {\n  apiLogin,\n  apiRegister,\n  getProducts,\n  getOrdersByUser,\n  getOrderById,\n  getSellers,\n  createOrder,\n  apiRegisterByAdmin,\n  getUsers,\n  removeUser,\n};\n","import styled from 'styled-components';\n\nexport const LoguinDiv = styled.div`\nborder: 1px solid black;\nbox-shadow: 0 0 1em #00000099;\nwidth: 400px;\nheight: 400px;\nposition: absolute;\ntop: 25%;\nleft: 0; right: 0;\nmargin: auto;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-evenly;\nalign-items: center;\n   p {\n     color: red;\n   }\n`;\n\nexport const Inputs = styled.input`\n  display:flex;\n  flex-direction: column;\n  width: 95%;\n  height: 50px;\n  padding: 3px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  font-size: 20px;\n`;\n\nexport const ButonsSend = styled.button`\nborder-style: none;\nwidth: 50%;\nheight: 50px;\nborder-radius: 10px;\nfont-size: 30px;\ncolor: white;\nbackground-color: #00ffbf;\n:hover {\n  background-color: white;\n  color: #00ffbf;\n  border: 2px solid #00ffbf;\n}\n`;\n\nexport const ButonsRegister = styled.button`\nborder-style: none;\nborder: 2px solid #00ffbf;\nwidth: 100%;\nheight: 50px;\nborder-radius: 10px;\nfont-size: 30px;\ncolor: white;\nbackground-color: #00ffbf;\n:hover {\n  background-color: white;\n  color: #00ffbf;\n  border: 2px solid #00ffbf;\n}\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport { loginValidation } from '../utils/inputValidations';\nimport { apiLogin } from '../services/apiCalls';\nimport {\n  LoguinDiv,\n  Inputs,\n  ButonsSend,\n  ButonsRegister,\n} from '../styles/login/Loguinstyles';\n\nexport default function Login() {\n  const [hiddenOn, setHiddenOn] = useState(true);\n  const [connectionOn, setConnectionOn] = useState();\n  const [login, setLogin] = useState({\n    email: '',\n    password: '',\n  });\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user !== undefined) {\n      setConnectionOn(user);\n    }\n  }, []);\n\n  const validatePassword = ({ target: { name, value } }) => {\n    setLogin({ ...login,\n      [name]: value,\n    });\n  };\n\n  function handleLoginValidation() {\n    const validationError = loginValidation(login).error;\n    if (validationError) return true;\n    return false;\n  }\n\n  const setRedirectPath = (role) => {\n    if (role === 'administrator') return '/admin/manage';\n    if (role === 'seller') return '/seller/orders';\n    return '/customer/products';\n  };\n\n  const sendLogin = async () => {\n    const response = await apiLogin(login);\n    if (response.error) {\n      setHiddenOn(false);\n    } else {\n      const { token, user: { id, name, email, role } } = response;\n      const userData = { id, name, email, role, token };\n      localStorage.setItem('user', JSON.stringify(userData));\n      setConnectionOn(userData);\n    }\n  };\n\n  return (\n    <LoguinDiv>\n\n      { connectionOn && <Redirect to={ setRedirectPath(connectionOn.role) } /> }\n\n      <p\n        hidden={ hiddenOn }\n        data-testid=\"common_login__element-invalid-email\"\n      >\n        invalid credential\n      </p>\n      <div>\n        <Inputs\n          name=\"email\"\n          type=\"text\"\n          onChange={ validatePassword }\n          placeholder=\"Insira seu e-mail\"\n          data-testid=\"common_login__input-email\"\n        />\n        <Inputs\n          name=\"password\"\n          type=\"password\"\n          onChange={ validatePassword }\n          placeholder=\"Insira sua senha\"\n          data-testid=\"common_login__input-password\"\n        />\n      </div>\n      <ButonsSend\n        type=\"submit\"\n        disabled={ handleLoginValidation() }\n        onClick={ () => sendLogin() }\n        data-testid=\"common_login__button-login\"\n      >\n        login\n      </ButonsSend>\n      <Link to=\"/register\">\n        <ButonsRegister\n          type=\"submit\"\n          data-testid=\"common_login__button-register\"\n        >\n          Ainda não tenho conta\n        </ButonsRegister>\n      </Link>\n    </LoguinDiv>\n  );\n}\n","import styled from 'styled-components';\n\nexport const NavbarDiv = styled.div`\n  color: white;\n  top: 0 !important;\n  position: relative !important;\n  width: 100%;\n  height: 100%;\n    a {\n      color: white;\n      text-decoration: none;\n    }\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: stretch;\n`;\n\nexport const NavBarProducs = styled.div`\n  background-color: #2fc18c;\n  width: 20%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: stretch;\n`;\n\nexport const NavBarOrders = styled.div`\n  background-color: #036b52;\n  width: 50%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: stretch;\n`;\n\nexport const NavBarProfile = styled.div`\n  background-color: #421891;\n  width: 20%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: stretch;\n`;\n\nexport const NavBarCheckout = styled.div`\n  width: 10%;\n  background-color: #056cf9;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: stretch;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, Redirect, Link } from 'react-router-dom';\n\nimport {\n  NavbarDiv,\n  NavBarProducs,\n  NavBarOrders,\n  NavBarProfile,\n  NavBarCheckout,\n} from '../styles/navBarStyles/NavBarStyles';\n\nexport default function Navbar() {\n  const [redirectOn, setRedirectOn] = useState(false);\n  const [userName, setUserName] = useState();\n  const { pathname } = useHistory().location;\n\n  useEffect(() => {\n    const { name } = JSON.parse(localStorage.getItem('user'));\n    setUserName(name);\n  }, []);\n\n  const clearAndRedirect = () => {\n    localStorage.clear();\n    setRedirectOn(true);\n  };\n\n  const renderAdmin = (\n    <NavBarOrders>\n      <div data-testid=\"customer_products__element-navbar-link-orders\">\n        <h3>Gerenciar Usuários</h3>\n      </div>\n    </NavBarOrders>\n  );\n\n  const renderSeller = (\n    <NavBarOrders>\n      <Link\n        to=\"/seller/orders\"\n        data-testid=\"customer_products__element-navbar-link-orders\"\n      >\n        <h3>Pedidos</h3>\n      </Link>\n    </NavBarOrders>\n  );\n\n  const renderCustomer = (\n    <>\n      <NavBarProducs>\n        <Link\n          to=\"/customer/products\"\n          data-testid=\"customer_products__element-navbar-link-products\"\n        >\n          <h3>Produtos</h3>\n        </Link>\n      </NavBarProducs>\n      <NavBarOrders>\n        <Link\n          to=\"/customer/orders\"\n          data-testid=\"customer_products__element-navbar-link-orders\"\n        >\n          <h3>Meus Pedidos</h3>\n        </Link>\n      </NavBarOrders>\n    </>);\n\n  const renderByRole = () => {\n    if (pathname.includes('customer')) {\n      return renderCustomer;\n    }\n    if (pathname.includes('seller')) {\n      return renderSeller;\n    }\n    if (pathname.includes('admin')) {\n      return renderAdmin;\n    }\n  };\n\n  return (\n    <NavbarDiv>\n\n      { redirectOn ? <Redirect to=\"/login\" /> : null }\n      { renderByRole() }\n\n      <NavBarProfile>\n        <h3 data-testid=\"customer_products__element-navbar-user-full-name\">\n          {userName}\n        </h3>\n      </NavBarProfile>\n      <NavBarCheckout>\n        <button\n          type=\"button\"\n          onClick={ () => clearAndRedirect() }\n          data-testid=\"customer_products__element-navbar-link-logout\"\n        >\n          sair\n        </button>\n      </NavBarCheckout>\n    </NavbarDiv>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const productCart = createSlice({\n  name: 'productCart',\n  initialState: {\n    subtotalCartList: [],\n    totalPrice: 0,\n  },\n  reducers: {\n    createSubtotalList: (state, action) => {\n      state.subtotalCartList = [...state.subtotalCartList, action.payload];\n    },\n    changeSubtotalList: (state, action) => {\n      const prevTaskIndex = state.subtotalCartList\n        .findIndex((subtotal) => subtotal.id === action.payload.id);\n      state.subtotalCartList.splice(prevTaskIndex, 1, action.payload);\n    },\n    updateTotalPrice: (state) => {\n      state.totalPrice = state.subtotalCartList\n        .reduce((acc, a) => acc + a.subtotal, 0);\n    },\n  },\n});\n\nexport const {\n  createSubtotalList,\n  changeSubtotalList,\n  updateTotalPrice } = productCart.actions;\n\nexport default productCart.reducer;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeSubtotalList,\n  createSubtotalList,\n  updateTotalPrice } from '../../redux/slice/productCart';\n\nexport default function ProductCard(product) {\n  const dispatch = useDispatch();\n  const subtotalCartList = useSelector(({ productCartReducer }) => (\n    productCartReducer.subtotalCartList));\n\n  const [count, setCount] = useState(0);\n\n  const { product: { id, name, price, url_image: urlImage } } = product;\n\n  useEffect(() => {\n    const multiplication = count * price;\n\n    if (subtotalCartList.length < Number('11')) {\n      dispatch(createSubtotalList({\n        subtotal: multiplication, id, name, price, quantity: count,\n      }));\n    } else {\n      dispatch(changeSubtotalList({\n        subtotal: multiplication, id, name, price, quantity: count,\n      }));\n      dispatch(updateTotalPrice());\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [count]);\n\n  const addProduct = () => {\n    setCount(count + 1);\n  };\n\n  const removeProduct = () => (count > 0 ? setCount(count - 1) : null);\n\n  const handleInputQuantity = ({ value }) => {\n    setCount(Number(value));\n  };\n\n  return (\n    <div>\n      <div>\n        <p>R$</p>\n        <p\n          data-testid={ `customer_products__element-card-price-${id}` }\n        >\n          { price.replace('.', ',')}\n        </p>\n      </div>\n      <img\n        src={ `${urlImage}` }\n        alt=\"imagem da bebida\"\n        data-testid={ `customer_products__img-card-bg-image-${id}` }\n      />\n      <div>\n        <p\n          data-testid={ `customer_products__element-card-title-${id}` }\n        >\n          {name}\n        </p>\n      </div>\n      <button\n        type=\"button\"\n        onClick={ removeProduct }\n        data-testid={ `customer_products__button-card-rm-item-${id}` }\n      >\n        -\n      </button>\n      <input\n        type=\"number\"\n        value={ count }\n        pattern=\"[0-9]*\"\n        onChange={ (e) => handleInputQuantity(e.target) }\n        data-testid={ `customer_products__input-card-quantity-${id}` }\n      />\n      <button\n        type=\"button\"\n        onClick={ addProduct }\n        data-testid={ `customer_products__button-card-add-item-${id}` }\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nProductCard.propTypes = ({\n  product: PropTypes.object,\n  id: PropTypes.string,\n  price: PropTypes.string,\n  title: PropTypes.string,\n  image: PropTypes.string,\n}).isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { getProducts } from '../../services/apiCalls';\n\nimport ProductCard from './ProductCard';\n\nexport default function ProductList() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const get = async () => {\n      const response = await getProducts();\n\n      setProducts(response);\n    };\n    get();\n  }, []);\n\n  return (\n    <div>\n      {\n        products.map((product, index) => (\n          <ProductCard key={ index } product={ product } data-testid={ product.id } />\n        ))\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport NavBar from '../../components/Navbar';\nimport ProductList from '../../components/customers/ProductList';\n\nexport default function Products() {\n  const totalPrice = useSelector(({ productCartReducer }) => (\n    productCartReducer.totalPrice)).toFixed(2).toString().replace('.', ',');\n\n  return (\n    <>\n      <NavBar />\n      <ProductList />\n      <h2>ver carrinho: R$</h2>\n      <Link\n        to=\"/customer/checkout\"\n        data-testid=\"customer_products__checkout-bottom-value\"\n      >\n        <button\n          type=\"button\"\n          disabled={ totalPrice === '0,00' }\n          onClick={ () => localStorage.setItem('total', JSON.stringify(totalPrice)) }\n          data-testid=\"customer_products__button-cart\"\n        >\n          { totalPrice }\n        </button>\n      </Link>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { changeSubtotalList, updateTotalPrice } from '../../redux/slice/productCart';\n\nexport default function\nCheckoutTableBody({ product: { id, name, quantity, price, subtotal }, index }) {\n  const dispatch = useDispatch();\n\n  const removeProduct = () => {\n    dispatch(changeSubtotalList({\n      subtotal: 0, id, name, price, quantity: 0,\n    }));\n    dispatch(updateTotalPrice());\n  };\n\n  return (\n    <tr>\n      <td\n        data-testid={ `customer_checkout__element-order-table-item-number-${index}` }\n      >\n        {index + 1}\n      </td>\n      <td\n        data-testid={ `customer_checkout__element-order-table-name-${index}` }\n      >\n        {name}\n      </td>\n      <td\n        data-testid={ `customer_checkout__element-order-table-quantity-${index}` }\n      >\n        {quantity}\n      </td>\n      <td\n        data-testid={ `customer_checkout__element-order-table-unit-price-${index}` }\n      >\n        {price.replace('.', ',')}\n      </td>\n      <td\n        data-testid={ `customer_checkout__element-order-table-sub-total-${index}` }\n      >\n        {subtotal.toFixed(2).replace('.', ',')}\n      </td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={ () => removeProduct() }\n          data-testid={ `customer_checkout__element-order-table-remove-${index}` }\n        >\n          Remover\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nCheckoutTableBody.propTypes = ({\n  name: PropTypes.string,\n  quantity: PropTypes.string,\n  price: PropTypes.string,\n  subtotal: PropTypes.string,\n  index: PropTypes.string,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckoutTableBody from './CheckoutTableBody';\n\nexport default function CheckoutTable({ productsSold }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Item</th>\n          <th>Descrição</th>\n          <th>Quantidade</th>\n          <th>valor Unitarío</th>\n          <th>Sub-total</th>\n          <th>Removeritem</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          productsSold.map((product, index) => (\n            <CheckoutTableBody product={ product } key={ index } index={ index } />))\n        }\n      </tbody>\n    </table>\n  );\n}\n\nCheckoutTable.propTypes = ({\n  productsSold: PropTypes.arrayOf(PropTypes.object),\n}).isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport CheckoutTable from '../../components/customers/CheckoutTable';\nimport NavBar from '../../components/Navbar';\n\nimport { createOrder, getSellers } from '../../services/apiCalls';\n\nexport default function Checkout() {\n  const productsSold = useSelector(({ productCartReducer }) => (\n    productCartReducer.subtotalCartList)).filter((product) => product.subtotal > 0);\n\n  const totalPrice = useSelector(({ productCartReducer }) => (\n    productCartReducer.totalPrice));\n\n  const [redirect, setRedirect] = useState(false);\n  const [orderId, setIdOrder] = useState('');\n  const [sellers, setSellers] = useState([]);\n  const [order, setOrder] = useState({\n    sellerId: 2,\n    totalPrice,\n    deliveryAddress: '',\n    deliveryNumber: '',\n    status: 'Pendente',\n    productsSold: productsSold\n      .map(({ id: productId, quantity }) => ({ productId, quantity })),\n  });\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const response = await getSellers();\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        setSellers(response);\n      }\n    };\n    apiCall();\n  }, []);\n\n  const handleChange = ({ name, value }) => {\n    if (name === 'select-seller') setOrder({ ...order, sellerId: value });\n    if (name === 'customer-address') setOrder({ ...order, deliveryAddress: value });\n    if (name === 'customer-address-number') {\n      setOrder({ ...order, deliveryNumber: value });\n    }\n  };\n\n  const sendOrder = async () => {\n    const orderDispatched = await createOrder(order);\n    setIdOrder(orderDispatched.id);\n    setRedirect(true);\n  };\n\n  return (\n    <>\n\n      { redirect ? <Redirect to={ `/customer/orders/${orderId}` } /> : null }\n\n      <NavBar />\n      <h2>Finalizar pedido</h2>\n      <CheckoutTable productsSold={ productsSold } />\n      Total:\n      <div\n        data-testid=\"customer_checkout__element-order-total-price\"\n      >\n        {totalPrice.toFixed(2).toString().replace('.', ',')}\n      </div>\n      <h2>Detalhes e Endereço para Entrega</h2>\n      <select\n        name=\"select-seller\"\n        onChange={ (e) => handleChange(e.target) }\n        data-testid=\"customer_checkout__select-seller\"\n      >\n        {\n          sellers.map(({ id, name }, index) => (\n            <option key={ index } value={ id }>\n              {name}\n            </option>))\n        }\n      </select>\n      <input\n        name=\"customer-address\"\n        type=\"text\"\n        value={ order.deliveryAddress }\n        onChange={ (e) => handleChange(e.target) }\n        data-testid=\"customer_checkout__input-address\"\n      />\n      <input\n        name=\"customer-address-number\"\n        type=\"number\"\n        pattern=\"[0-9]*\"\n        value={ order.deliveryNumber }\n        onChange={ (e) => handleChange(e.target) }\n        data-testid=\"customer_checkout__input-addressNumber\"\n      />\n      <button\n        type=\"button\"\n        onClick={ () => sendOrder() }\n        data-testid=\"customer_checkout__button-submit-order\"\n      >\n        finalizar pedido\n      </button>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { registerValidation } from '../utils/inputValidations';\nimport { apiRegister } from '../services/apiCalls';\nimport {\n  LoguinDiv,\n  Inputs,\n  ButonsSend,\n} from '../styles/login/Loguinstyles';\n\nexport default function RegisterUser() {\n  const [hiddenOn, setHiddenOn] = useState(true);\n  const [redirectOn, setRedirectOn] = useState(false);\n  const [newUser, setNewUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: 'customer',\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setNewUser({ ...newUser, [name]: value });\n  };\n\n  function switchDisabledButton() {\n    const validationError = registerValidation(newUser).error;\n    if (validationError) return true;\n    return false;\n  }\n\n  const sendRegister = async () => {\n    const response = await apiRegister(newUser);\n    if (response.error) {\n      setHiddenOn(false);\n    } else {\n      const { token, user: { id, name, email, role } } = response;\n      const userData = { id, name, email, role, token };\n      localStorage.setItem('user', JSON.stringify(userData));\n      setRedirectOn(true);\n    }\n  };\n\n  return (\n    <LoguinDiv>\n\n      { redirectOn ? <Redirect to=\"/customer/products\" /> : null }\n\n      <p\n        hidden={ hiddenOn }\n        data-testid=\"common_register__element-invalid_register\"\n      >\n        invalid credential\n      </p>\n      <Inputs\n        name=\"name\"\n        type=\"name\"\n        value={ newUser.name }\n        onChange={ handleChange }\n        placeholder=\"Insira um nome\"\n        data-testid=\"common_register__input-name\"\n      />\n      <Inputs\n        name=\"email\"\n        type=\"text\"\n        value={ newUser.email }\n        onChange={ handleChange }\n        placeholder=\"Insira um e-email\"\n        data-testid=\"common_register__input-email\"\n      />\n      <Inputs\n        name=\"password\"\n        type=\"password\"\n        value={ newUser.password }\n        onChange={ handleChange }\n        placeholder=\"Insira uma senha\"\n        data-testid=\"common_register__input-password\"\n      />\n      <ButonsSend\n        type=\"submit\"\n        disabled={ switchDisabledButton() }\n        onClick={ () => sendRegister() }\n        data-testid=\"common_register__button-register\"\n      >\n        register now\n      </ButonsSend>\n    </LoguinDiv>\n  );\n}\n","import { io } from 'socket.io-client';\n\nconst client = io('http://localhost:3001');\n\nexport default client;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../../components/Navbar';\nimport { getOrdersByUser } from '../../services/apiCalls';\nimport socket from '../../utils/socketClient';\n\nexport default function Orders() {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const response = await getOrdersByUser();\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        setOrders(response);\n      }\n    };\n    apiCall();\n  }, []);\n\n  const shouldUpdateOrders = orders.length > 0;\n\n  useEffect(() => {\n    socket.on('updatedOrders', (updatedOrders) => {\n      setOrders(updatedOrders);\n    });\n  }, [shouldUpdateOrders]);\n\n  return (\n    <div>\n      <Navbar />\n      {\n        orders.map((order, index) => (\n          <Link\n            key={ index }\n            to={ `/customer/orders/${order.id}` }\n          >\n            <div\n              key={ index }\n            >\n              <p data-testid={ `customer_orders__element-order-id-${order.id}` }>\n                { order.id }\n              </p>\n              <p data-testid={ `customer_orders__element-delivery-status-${order.id}` }>\n                { order.status }\n              </p>\n              <p data-testid={ `customer_orders__element-order-date-${order.id}` }>\n                { order.saleDate }\n              </p>\n              <p data-testid={ `customer_orders__element-card-price-${order.id}` }>\n                { order.totalPrice.replace('.', ',') }\n              </p>\n            </div>\n          </Link>\n        ))\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function\nOrderDetailsTableBody({ product, index, datId }) {\n  const { name, salesProducts: { quantity }, price } = product;\n\n  return (\n    <tr key={ index }>\n      <td\n        data-testid={ `${datId}-table-item-number-${index}` }\n      >\n        {index + 1}\n      </td>\n      <td\n        data-testid={ `${datId}-table-name-${index}` }\n      >\n        {name}\n      </td>\n      <td\n        data-testid={ `${datId}-table-quantity-${index}` }\n      >\n        {quantity}\n      </td>\n      <td\n        data-testid={ `${datId}-table-unit-price-${index}` }\n      >\n        {price.replace('.', ',')}\n      </td>\n      <td\n        data-testid={ `${datId}-table-sub-total-${index}` }\n      >\n        {(Number(price) * (quantity)).toFixed(2) }\n      </td>\n    </tr>\n  );\n}\n\nOrderDetailsTableBody.propTypes = ({\n  products: PropTypes.arrayOf(PropTypes.object),\n  index: PropTypes.number,\n  datId: PropTypes.string,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport OrderDetailsTableBody from './OrderDetailsTableBody';\n\nexport default function OrderDetailsTable({ products, datId }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Item</th>\n          <th>Descrição</th>\n          <th>Quantidade</th>\n          <th>valor Unitarío</th>\n          <th>Sub-total</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          products.map((product, index) => (\n            <OrderDetailsTableBody\n              key={ index }\n              product={ product }\n              index={ index }\n              datId={ datId }\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n}\n\nOrderDetailsTable.propTypes = ({\n  products: PropTypes.arrayOf(PropTypes.object),\n  datId: PropTypes.string,\n}).isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport OrderDetailsTable from '../../components/customers/OrderDetailsTable';\nimport Navbar from '../../components/Navbar';\nimport socket from '../../utils/socketClient';\nimport { getOrderById } from '../../services/apiCalls';\n\nexport default function OrderDetails() {\n  const [order, setOrder] = useState([]);\n  const [sellerName, setSellerName] = useState([]);\n  const [products, setProducts] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const response = await getOrderById(params.id);\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        setOrder(response);\n        setSellerName(response.seller.name);\n        setProducts(response.products);\n      }\n    };\n    apiCall();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    socket.on('updatedStatus', ({ status }) => {\n      setOrder({ ...order, status });\n    });\n  }, [order]);\n\n  const changeStatus = ({ target: { value: newStatus } }) => {\n    const { id: userId } = JSON.parse(localStorage.getItem('user'));\n    socket.emit('changeStatus', ({ userId, orderId: order.id, status: newStatus }));\n  };\n\n  const datId = 'customer_order_details__element-order';\n\n  return (\n    <div>\n      <Navbar />\n      <h2>\n        Detalhe do pedido\n      </h2>\n      <div>\n        <p\n          data-testid={ `${datId}-details-label-order-id` }\n        >\n          {order.id}\n        </p>\n        <p\n          data-testid={ `${datId}-details-label-seller-name` }\n        >\n          {sellerName}\n        </p>\n        <p\n          data-testid={ `${datId}-details-label-order-date` }\n        >\n          {order.saleDate}\n        </p>\n        <p\n          data-testid={ `${datId}-details-label-delivery-status` }\n        >\n          {order.status}\n        </p>\n        <button\n          type=\"button\"\n          value=\"Entregue\"\n          disabled={ order.status !== 'Em Trânsito' }\n          onClick={ (e) => changeStatus(e) }\n          data-testid=\"customer_order_details__button-delivery-check\"\n        >\n          Marcar como entregue\n        </button>\n      </div>\n      <OrderDetailsTable products={ products } datId={ datId } />\n      <p data-testid=\"customer_order_details__element-order-total-price\">\n        {\n          `Total: ${Number(order.totalPrice)\n            .toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}`\n        }\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function\nManagementUsersTableBody({ user, deleteUser, index }) {\n  const { id, name, email, role } = user;\n\n  const datId = 'admin_manage__element-user-table';\n\n  return (\n    <tr key={ index }>\n      <td data-testid={ `${datId}-item-number-${index}` }>\n        {index + 1}\n      </td>\n      <td data-testid={ `${datId}-name-${index}` }>\n        {name}\n      </td>\n      <td data-testid={ `${datId}-email-${index}` }>\n        {email}\n      </td>\n      <td data-testid={ `${datId}-role-${index}` }>\n        {role}\n      </td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={ () => deleteUser(id) }\n          data-testid={ `${datId}-remove-${index}` }\n        >\n          Excluir\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nManagementUsersTableBody.propTypes = ({\n  products: PropTypes.arrayOf(PropTypes.object),\n  index: PropTypes.number,\n  deleteUser: PropTypes.func,\n  datId: PropTypes.string,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ManagementUsersTableBody from './ManagementUsersTableBody';\n\nexport default function ManagementUsersTable({ users, deleteUser }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Item</th>\n          <th>Nome</th>\n          <th>E-mail</th>\n          <th>Tipo</th>\n          <th>Excluir</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          users.map((user, index) => (\n            <ManagementUsersTableBody\n              key={ index }\n              user={ user }\n              deleteUser={ deleteUser }\n              index={ index }\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n}\n\nManagementUsersTable.propTypes = ({\n  products: PropTypes.arrayOf(PropTypes.object),\n  deleteUser: PropTypes.func,\n}).isRequired;\n","import React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/Navbar';\nimport { registerValidation } from '../../utils/inputValidations';\nimport { apiRegisterByAdmin, getUsers, removeUser } from '../../services/apiCalls';\nimport ManagementUsersTable from '../../components/adm/ManagementUsersTable';\n\nexport default function Management() {\n  const [hiddenOn, hiddenOnSet] = useState(true);\n  const [usersList, setUsersList] = useState([]);\n  const [newUser, setNewUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: 'customer',\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setNewUser({ ...newUser, [name]: value });\n  };\n\n  const apiCall = async () => {\n    const response = await getUsers();\n    if (response.error) {\n      console.log(response.error);\n    } else {\n      setUsersList(response);\n    }\n  };\n\n  useEffect(() => {\n    apiCall();\n  }, []);\n\n  function switchDisabledButton() {\n    const validationError = registerValidation(newUser).error;\n    if (validationError) return true;\n    return false;\n  }\n\n  const sendRegister = async () => {\n    const response = await apiRegisterByAdmin(newUser);\n    if (response.error) {\n      hiddenOnSet(false);\n    } else {\n      apiCall();\n      setNewUser({\n        name: '',\n        email: '',\n        password: '',\n        role: 'customer',\n      });\n    }\n  };\n\n  const deleteUser = async (id) => {\n    await removeUser(id);\n    await apiCall();\n  };\n\n  return (\n    <>\n      <div>\n        <Navbar />\n        <p\n          data-testid=\"admin_manage__element-invalid-register\"\n          hidden={ hiddenOn }\n        >\n          Person already registered\n        </p>\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={ newUser.name }\n          onChange={ handleChange }\n          placeholder=\"Nome e sobrenome\"\n          data-testid=\"admin_manage__input-name\"\n        />\n        <input\n          name=\"email\"\n          type=\"text\"\n          value={ newUser.email }\n          onChange={ handleChange }\n          placeholder=\"E-mail\"\n          data-testid=\"admin_manage__input-email\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          value={ newUser.password }\n          onChange={ handleChange }\n          placeholder=\"Insira sua senha\"\n          data-testid=\"admin_manage__input-password\"\n        />\n        <select\n          name=\"role\"\n          value={ newUser.role }\n          onChange={ handleChange }\n          data-testid=\"admin_manage__select-role\"\n        >\n          <option value=\"customer\">Cliente</option>\n          <option value=\"seller\">Vendedor</option>\n          <option value=\"administrator\">Admin</option>\n        </select>\n        <button\n          type=\"button\"\n          disabled={ switchDisabledButton() }\n          onClick={ () => sendRegister() }\n          data-testid=\"admin_manage__button-register\"\n        >\n          Cadastrar\n        </button>\n      </div>\n      <ManagementUsersTable\n        users={ usersList }\n        deleteUser={ deleteUser }\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../../components/Navbar';\nimport { getOrdersByUser } from '../../services/apiCalls';\nimport socket from '../../utils/socketClient';\n\nexport default function SellerOrders() {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const response = await getOrdersByUser();\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        setOrders(response);\n      }\n    };\n    apiCall();\n  }, []);\n\n  const shouldUpdateOrders = orders.length > 0;\n\n  useEffect(() => {\n    socket.on('updatedOrders', (updatedOrders) => {\n      setOrders(updatedOrders);\n    });\n  }, [shouldUpdateOrders]);\n\n  return (\n    <div>\n      <Navbar />\n      {\n        orders.map((order, index) => (\n          <Link\n            key={ index }\n            to={ `/seller/orders/${order.id}` }\n          >\n            <div\n              key={ index }\n            >\n              <p data-testid={ `seller_orders__element-order-id-${order.id}` }>\n                { order.id }\n              </p>\n              <p data-testid={ `seller_orders__element-delivery-status-${order.id}` }>\n                { order.status }\n              </p>\n              <p data-testid={ `seller_orders__element-order-date-${order.id}` }>\n                { order.saleDate }\n              </p>\n              <p data-testid={ `seller_orders__element-card-price-${order.id}` }>\n                { order.totalPrice.replace('.', ',') }\n              </p>\n            </div>\n            <p data-testid={ `seller_orders__element-card-address-${order.id}` }>\n              { `${order.deliveryAddress}, ${order.deliveryNumber}` }\n            </p>\n          </Link>\n        ))\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function\nSellerOrderDetailsTableBody({ product, index, datId }) {\n  const { name, salesProducts: { quantity }, price } = product;\n\n  return (\n    <tr key={ index }>\n      <td\n        data-testid={ `${datId}-table-item-number-${index}` }\n      >\n        {index + 1}\n      </td>\n      <td\n        data-testid={ `${datId}-table-name-${index}` }\n      >\n        {name}\n      </td>\n      <td\n        data-testid={ `${datId}-table-quantity-${index}` }\n      >\n        {quantity}\n      </td>\n      <td\n        data-testid={ `${datId}-table-unit-price-${index}` }\n      >\n        {price.replace('.', ',')}\n      </td>\n      <td\n        data-testid={ `${datId}-table-sub-total-${index}` }\n      >\n        {(Number(price) * (quantity)).toFixed(2) }\n      </td>\n    </tr>\n  );\n}\n\nSellerOrderDetailsTableBody.propTypes = ({\n  products: PropTypes.arrayOf(PropTypes.object),\n  index: PropTypes.number,\n  datId: PropTypes.string,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SellerOrderDetailsTableBody from './SellerOrderDetailsTableBody';\n\nexport default function SellerOrderDetailsTable({ products, datId }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Item</th>\n          <th>Descrição</th>\n          <th>Quantidade</th>\n          <th>valor Unitarío</th>\n          <th>Sub-total</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          products.map((product, index) => (\n            <SellerOrderDetailsTableBody\n              key={ index }\n              product={ product }\n              index={ index }\n              datId={ datId }\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n}\n\nSellerOrderDetailsTable.propTypes = ({\n  products: PropTypes.arrayOf(PropTypes.object),\n  datId: PropTypes.string,\n}).isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from '../../components/Navbar';\nimport SellerOrderDetailsTable from '../../components/sellers/SellerOrderDetailsTable';\nimport { getOrderById } from '../../services/apiCalls';\nimport socket from '../../utils/socketClient';\n\nexport default function OrderDetails() {\n  const [order, setOrder] = useState([]);\n  const [products, setProducts] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const response = await getOrderById(params.id);\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        setOrder(response);\n        setProducts(response.products);\n      }\n    };\n    apiCall();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    socket.on('updatedStatus', ({ status }) => {\n      setOrder({ ...order, status });\n    });\n  }, [order]);\n\n  const changeStatus = ({ target: { value: newStatus } }) => {\n    const { id: userId } = JSON.parse(localStorage.getItem('user'));\n    socket.emit('changeStatus', ({ userId, orderId: order.id, status: newStatus }));\n  };\n\n  const datId = 'seller_order_details__element-order';\n\n  return (\n    <div>\n      <Navbar />\n      <h2>\n        Detalhe do pedido\n      </h2>\n      <div>\n        <p\n          data-testid={ `${datId}-details-label-order-id` }\n        >\n          {order.id}\n        </p>\n        <p\n          data-testid={ `${datId}-details-label-order-date` }\n        >\n          {order.saleDate}\n        </p>\n        <p\n          data-testid={ `${datId}-details-label-delivery-status` }\n        >\n          {order.status}\n        </p>\n        <button\n          type=\"button\"\n          value=\"Preparando\"\n          disabled={ order.status !== 'Pendente' }\n          onClick={ (e) => changeStatus(e) }\n          data-testid=\"seller_order_details__button-preparing-check\"\n        >\n          Preparar pedido\n        </button>\n        <button\n          type=\"button\"\n          value=\"Em Trânsito\"\n          disabled={ order.status !== 'Preparando' }\n          onClick={ (e) => changeStatus(e) }\n          data-testid=\"seller_order_details__button-dispatch-check\"\n        >\n          Saiu para entrega\n        </button>\n      </div>\n      <SellerOrderDetailsTable products={ products } datId={ datId } />\n      <p data-testid={ `${datId}-total-price` }>\n        {\n          `Total: ${Number(order.totalPrice)\n            .toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}`\n        }\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from '../pages/Login';\nimport Products from '../pages/customers/Products';\nimport Checkout from '../pages/customers/Checkout';\nimport Register from '../pages/Register';\nimport Orders from '../pages/customers/Orders';\nimport OrderDetails from '../pages/customers/OrderDetails';\nimport Management from '../pages/adm/Management';\nimport SellerOrders from '../pages/sellers/SellerOrders';\nimport SellerOrderDetails from '../pages/sellers/SellerOrderDetails';\n\nexport default function Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/login\" component={ Login } />\n      </Route>\n\n      <Route exact path=\"/login\" component={ Login } />\n\n      <Route exact path=\"/register\" component={ Register } />\n\n      <Route exact path=\"/customer/orders\" component={ Orders } />\n\n      <Route exact path=\"/customer/orders/:id\" component={ OrderDetails } />\n\n      <Route exact path=\"/customer/products\" component={ Products } />\n\n      <Route exact path=\"/seller/orders\" component={ SellerOrders } />\n\n      <Route exact path=\"/seller/orders/:id\" component={ SellerOrderDetails } />\n\n      <Route exact path=\"/admin/manage\" component={ Management } />\n\n      <Route exact path=\"/customer/checkout\" component={ Checkout } />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport Router from './routes/Router';\n\nfunction App() {\n  return (\n    <div>\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport productCartReducer from './slice/productCart';\n\nexport default configureStore({\n  reducer: { productCartReducer },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n   <Provider store={ store }> \n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","const Joi = require('joi');\n\nconst minCaracterPassword = 6;\nconst minCharacterName = 12;\nconst loginSchema = Joi.object({\n  // tlds precisa ser setado como falso para não quebrar a página. Referêcia: https://github.com/sideway/joi/issues/2390.\n  email: Joi.string().email({ tlds: { allow: false } }).required(),\n  password: Joi.string().min(minCaracterPassword).required(),\n});\n\nconst registerSchema = Joi.object({\n  name: Joi.string().min(minCharacterName).required(),\n  email: Joi.string().email({ tlds: { allow: false } }).required(),\n  password: Joi.string().min(minCaracterPassword).required(),\n  role: Joi.string(),\n});\n\nmodule.exports = {\n  loginValidation: (login) => loginSchema.validate(login),\n  registerValidation: (register) => registerSchema.validate(register),\n};\n"],"sourceRoot":""}